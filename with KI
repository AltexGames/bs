using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class TicTacToe
    {
        private static bool isPlayerOneTurn = true;

        public static string[] FieldsValues = new string[] { " ", " ", " ", " ", " ", " ", " ", " ", " ", };
        public static readonly string CharacterPlayerOne = "X",
            CharacterPlayerTwo = "O";
        public static int OccupiedFieldsCount = 0;

        public static void PlayerVSComputerMode()
        {
            while (!IsGameEnded())
            {
                DrawField();

                if (OccupiedFieldsCount == 9)
                {
                    Console.WriteLine("Das Spiel ist zu ende, da alle Spielfelder belegt sind!");
                    break;
                }

                if (isPlayerOneTurn)
                {

                    isPlayerOneTurn = !isPlayerOneTurn;
                    while (true)
                    {
                        Console.WriteLine("\nSpieler eins, du bist am Zug, bitte gebe ein welches Feld du besetzen möchtest (x:y)");
                        string[] chooice = Console.ReadLine().Split(":");

                        if (chooice.Length != 2)
                        {
                            Console.WriteLine("Ups, deine Koordinaten sehen aber lustig aus, bitte nutzte dieses Format, x:y!");
                            break;
                        }

                        int.TryParse(chooice[0], out int xCoordinate);
                        int.TryParse(chooice[1], out int yCoordinate);

                        if (xCoordinate < 0 || xCoordinate > 3 || yCoordinate < 1 || yCoordinate > 3)
                        {
                            Console.WriteLine("Diese Koordinaten existieren nicht, bitte versuche es nocheinmal.");
                            break;
                        }

                        int selectedField;
                        if (xCoordinate == 1)
                            selectedField = yCoordinate;
                        else if (xCoordinate == 2)
                            selectedField = 3 + yCoordinate;
                        else
                            selectedField = 6 + yCoordinate;

                        if (FieldsValues[selectedField - 1] == " ")
                        {
                            OccupiedFieldsCount++;
                            FieldsValues[selectedField - 1] = CharacterPlayerOne;
                            break;
                        }

                        Console.WriteLine("Ups, dieses Feld ist bereits durch deinen Gegener belegt, bitte wähle ein anderes Feld.");
                    }
                }
                else
                {
                    isPlayerOneTurn = !isPlayerOneTurn;
                    Console.WriteLine("\nDie KI ist am Zug und überlegt.");
                    while (true)
                    {
                        string[] chooice = Console.ReadLine().Split(":");

                        Random random = new Random();
                        int selectedField = random.Next(0, 8);

                        if (FieldsValues[selectedField - 1] == " ")
                        {
                            OccupiedFieldsCount++;
                            FieldsValues[selectedField - 1] = CharacterPlayerTwo;
                            break;
                        }
                    }
                }

            }
            FieldsValues = new string[] { " ", " ", " ", " ", " ", " ", " ", " ", " ", };
            OccupiedFieldsCount = 0;
        }

        public static void PlayerVSPlayerMode()
        {
            while (!IsGameEnded())
            {
                DrawField();

                if (OccupiedFieldsCount == 9)
                {
                    Console.WriteLine("Das Spiel ist zu ende, da alle Spielfelder belegt sind!");
                    break;
                }

                if (isPlayerOneTurn)
                {

                    isPlayerOneTurn = !isPlayerOneTurn;
                    while (true)
                    {
                        Console.WriteLine("\nSpieler eins, du bist am Zug, bitte gebe ein welches Feld du besetzen möchtest (x:y)");
                        string[] chooice = Console.ReadLine().Split(":");

                        if (chooice.Length != 2)
                        {
                            Console.WriteLine("Ups, deine Koordinaten sehen aber lustig aus, bitte nutzte dieses Format, x:y!");
                            break;
                        }

                        int.TryParse(chooice[0], out int xCoordinate);
                        int.TryParse(chooice[1], out int yCoordinate);

                        if (xCoordinate < 0 || xCoordinate > 3 || yCoordinate < 1 || yCoordinate > 3)
                        {
                            Console.WriteLine("Diese Koordinaten existieren nicht, bitte versuche es nocheinmal.");
                            break;
                        }

                        int selectedField;
                        if (xCoordinate == 1)
                            selectedField = yCoordinate;
                        else if (xCoordinate == 2)
                            selectedField = 3 + yCoordinate;
                        else
                            selectedField = 6 + yCoordinate;

                        if (FieldsValues[selectedField - 1] == " ")
                        {
                            OccupiedFieldsCount++;
                            FieldsValues[selectedField - 1] = CharacterPlayerOne;
                            break;
                        }

                        Console.WriteLine("Ups, dieses Feld ist bereits durch deinen Gegener belegt, bitte wähle ein anderes Feld.");
                    }
                }
                else
                {
                    isPlayerOneTurn = !isPlayerOneTurn;
                    while (true)
                    {
                        Console.WriteLine("\nSpieler zwei, du bist am Zug, bitte gebe ein welches Feld du besetzen möchtest (x:y)");
                        string[] chooice = Console.ReadLine().Split(":");

                        if (chooice.Length != 2)
                        {
                            Console.WriteLine("Ups, deine Koordinaten sehen aber lustig aus, bitte nutzte dieses Format, x:y!");
                            break;
                        }

                        int.TryParse(chooice[0], out int xCoordinate);
                        int.TryParse(chooice[1], out int yCoordinate);

                        if (xCoordinate < 0 || xCoordinate > 3 || yCoordinate < 1 || yCoordinate > 3)
                        {
                            Console.WriteLine("Diese Koordinaten existieren nicht, bitte versuche es nocheinmal.");
                            break;
                        }

                        int selectedField;
                        if (xCoordinate == 1)
                            selectedField = yCoordinate;
                        else if (xCoordinate == 2)
                            selectedField = 3 + yCoordinate;
                        else
                            selectedField = 6 + yCoordinate;

                        if (FieldsValues[selectedField - 1] == " ")
                        {
                            OccupiedFieldsCount++;
                            FieldsValues[selectedField - 1] = CharacterPlayerTwo;
                            break;
                        }

                        Console.WriteLine("Ups, dieses Feld ist bereits durch deinen Gegener belegt, bitte wähle ein anderes Feld.");
                    }
                }

            }

            FieldsValues = new string[] { " ", " ", " ", " ", " ", " ", " ", " ", " ", };
            OccupiedFieldsCount = 0;
        }

        private static bool IsGameEnded()
        {
            if ((FieldsValues[0] == CharacterPlayerOne && FieldsValues[1] == CharacterPlayerOne && FieldsValues[2] == CharacterPlayerOne) ||
                (FieldsValues[3] == CharacterPlayerOne && FieldsValues[4] == CharacterPlayerOne && FieldsValues[5] == CharacterPlayerOne) ||
                (FieldsValues[6] == CharacterPlayerOne && FieldsValues[7] == CharacterPlayerOne && FieldsValues[8] == CharacterPlayerOne) ||
                (FieldsValues[6] == CharacterPlayerOne && FieldsValues[4] == CharacterPlayerOne && FieldsValues[2] == CharacterPlayerOne) ||
                (FieldsValues[0] == CharacterPlayerOne && FieldsValues[4] == CharacterPlayerOne && FieldsValues[8] == CharacterPlayerOne) ||
                (FieldsValues[0] == CharacterPlayerOne && FieldsValues[3] == CharacterPlayerOne && FieldsValues[6] == CharacterPlayerOne) ||
                (FieldsValues[1] == CharacterPlayerOne && FieldsValues[4] == CharacterPlayerOne && FieldsValues[7] == CharacterPlayerOne) ||
                (FieldsValues[2] == CharacterPlayerOne && FieldsValues[5] == CharacterPlayerOne && FieldsValues[8] == CharacterPlayerOne))
            {
                DrawField();
                Console.WriteLine("\nDas Spiel ist beendet und Spieler eins ist der glückliche Gewinner!");
                return true;
            }

            if ((FieldsValues[0] == CharacterPlayerTwo && FieldsValues[1] == CharacterPlayerTwo && FieldsValues[2] == CharacterPlayerTwo) ||
                (FieldsValues[3] == CharacterPlayerTwo && FieldsValues[4] == CharacterPlayerTwo && FieldsValues[5] == CharacterPlayerTwo) ||
                (FieldsValues[6] == CharacterPlayerTwo && FieldsValues[7] == CharacterPlayerTwo && FieldsValues[8] == CharacterPlayerTwo) ||
                (FieldsValues[6] == CharacterPlayerTwo && FieldsValues[4] == CharacterPlayerTwo && FieldsValues[2] == CharacterPlayerTwo) ||
                (FieldsValues[0] == CharacterPlayerTwo && FieldsValues[4] == CharacterPlayerTwo && FieldsValues[8] == CharacterPlayerTwo) ||
                (FieldsValues[0] == CharacterPlayerTwo && FieldsValues[3] == CharacterPlayerTwo && FieldsValues[6] == CharacterPlayerTwo) ||
                (FieldsValues[1] == CharacterPlayerTwo && FieldsValues[4] == CharacterPlayerTwo && FieldsValues[7] == CharacterPlayerTwo) ||
                (FieldsValues[2] == CharacterPlayerTwo && FieldsValues[5] == CharacterPlayerTwo && FieldsValues[8] == CharacterPlayerTwo))
            {
                DrawField();
                Console.WriteLine("\nDas Spiel ist beendet und Spieler zwei ist der glückliche Gewinner!");
                return true;
            }
            return false;
        }

        public static void DrawField()
        {
            Console.Clear();
            Console.WriteLine(" ___________");
            Console.WriteLine("| y  1 2 3  |");
            Console.WriteLine("|x   _ _ _  |");
            Console.WriteLine($"| 1 |{FieldsValues[0]}|{FieldsValues[1]}|{FieldsValues[2]}| |");
            Console.WriteLine($"| 2 |{FieldsValues[3]}|{FieldsValues[4]}|{FieldsValues[5]}| |");
            Console.WriteLine($"| 3 |{FieldsValues[6]}|{FieldsValues[7]}|{FieldsValues[8]}| |");
            Console.WriteLine("|           |");
            Console.WriteLine("|___________|");

        }


    }
}
